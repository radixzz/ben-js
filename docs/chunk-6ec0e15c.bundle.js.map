{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js"],"names":["Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","__webpack_require__","d","__webpack_exports__","CompletionItemKind","InsertTextFormat","MarkedString","DocumentHighlightKind","SymbolKind","TextDocument","create","line","character","is","value","candidate","Is","objectLiteral","number","one","two","three","four","start","end","Error","uri","range","defined","string","undefined","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","color","label","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","result","location","message","Warning","Information","Hint","severity","code","source","relatedInformation","title","command","args","_i","arguments","length","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","options","overwrite","ignoreIfExists","boolean","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItem","CompletionList","Hover","ParameterInformation","SignatureInformation","DocumentHighlight","SymbolInformation","TextEditChangeImpl","this","prototype","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_this","_textEditChanges","Object","_workspaceEdit","forEach","textEditChange","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","version","languageId","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","detail","selectionRange","children","deprecated","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","diagnostics","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","a","b","diff","lastModifiedOffset","i","e","startOffset","endOffset","substring","compare","p","left","slice","right","leftIdx","rightIdx","ret","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","STOP_WHEN_IDLE_FOR","WorkerManager","defaults","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","dispose","_client","clearInterval","timePassedSinceLastUsed","Date","now","_getClient","monaco","editor","createWebWorker","moduleId","createData","languageSettings","getProxy","getLanguageServiceWorker","resources","then","client","_","withSyncedResources","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","getModels","resource","worker","doValidation","markers","map","toDiagnostics","getModel","err","console","error","toSeverity","lsSeverity","main","MarkerSeverity","Info","diag","startLineNumber","startColumn","endLineNumber","endColumn","fromPosition","column","lineNumber","fromRange","getStartPosition","getEndPosition","toRange","toCompletionItemKind","mItemKind","languages","toTextEdit","languageFeatures_CompletionAdapter","CompletionAdapter","provideCompletionItems","context","token","doComplete","info","wordInfo","getWordUntilPosition","wordRange","entry","item","insertText","sortText","filterText","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","suggestions","isMarkupContent","thing","toMarkdownString","toMarkedStringArray","HoverAdapter","provideHover","doHover","toHighlighKind","mKind","DocumentHighlightAdapter","provideDocumentHighlights","findDocumentHighlights","toSymbolKind","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","DocumentLinkAdapter","provideLinks","findDocumentLinks","links","url","fromFormattingOptions","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","FoldingRangeAdapter","provideFoldingRanges","ranges","toFoldingRangeKind","Comment","Imports","Region","setupMode","uris","apply","registerCompletionItemProvider","registerHoverProvider","registerDocumentHighlightProvider","registerLinkProvider","registerFoldingRangeProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider"],"mappings":"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","file":"chunk-6ec0e15c.bundle.js","sourcesContent":["/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `HTMLWorker` instance\n                moduleId: 'vs/language/html/htmlWorker',\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.options,\n                    languageId: this._defaults.languageId\n                },\n                label: this._defaults.languageId\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; });\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.', ':', '<', '\"', '=', '/'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var wordInfo = model.getWordUntilPosition(position);\n            var wordRange = new Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText || entry.label,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    range: wordRange,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.additionalTextEdits) {\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                suggestions: items\n            };\n        });\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\n// --- hover ------\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        });\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- document highlights ------\nfunction toHighlighKind(kind) {\n    var mKind = monaco.languages.DocumentHighlightKind;\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return mKind.Read;\n        case ls.DocumentHighlightKind.Write: return mKind.Write;\n        case ls.DocumentHighlightKind.Text: return mKind.Text;\n    }\n    return mKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                kind: toHighlighKind(item.kind)\n            }); });\n        });\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range)\n            }); });\n        });\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nvar DocumentLinkAdapter = /** @class */ (function () {\n    function DocumentLinkAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return {\n                links: items.map(function (item) { return ({\n                    range: toRange(item.range),\n                    url: item.target\n                }); })\n            };\n        });\n    };\n    return DocumentLinkAdapter;\n}());\nexport { DocumentLinkAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        });\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    // all modes\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n    monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n    monaco.languages.registerLinkProvider(languageId, new languageFeatures.DocumentLinkAdapter(worker));\n    monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\n    monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker));\n    // only html\n    if (languageId === 'html') {\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker));\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker));\n        new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n    }\n}\n"],"sourceRoot":""}