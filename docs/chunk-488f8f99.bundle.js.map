{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/cssMode.js"],"names":["Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","__webpack_require__","d","__webpack_exports__","VersionedTextDocumentIdentifier","CompletionItemKind","InsertTextFormat","MarkedString","DocumentHighlightKind","SymbolKind","CodeActionKind","CodeAction","TextDocument","create","line","character","is","value","candidate","Is","objectLiteral","number","one","two","three","four","start","end","Error","uri","range","defined","string","undefined","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","color","label","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","result","location","message","Warning","Information","Hint","severity","code","source","relatedInformation","title","command","args","_i","arguments","length","replace","newText","insert","position","del","textDocument","edits","Array","isArray","options","overwrite","ignoreIfExists","boolean","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItem","CompletionList","Hover","ParameterInformation","SignatureInformation","DocumentHighlight","SymbolInformation","TextEditChangeImpl","this","prototype","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_this","_textEditChanges","Object","_workspaceEdit","forEach","textEditChange","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","version","languageId","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","CodeActionContext","CodeLens","FormattingOptions","DocumentSymbol","detail","selectionRange","children","deprecated","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","diagnostics","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","a","b","diff","lastModifiedOffset","i","e","startOffset","endOffset","substring","compare","p","left","slice","right","leftIdx","rightIdx","ret","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","STOP_WHEN_IDLE_FOR","WorkerManager","defaults","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","dispose","_client","clearInterval","timePassedSinceLastUsed","Date","now","_getClient","monaco","editor","createWebWorker","moduleId","createData","languageSettings","diagnosticsOptions","getProxy","getLanguageServiceWorker","resources","then","client","_","withSyncedResources","Uri","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","getModels","resource","worker","doValidation","markers","map","toDiagnostics","getModel","err","console","error","toSeverity","lsSeverity","main","MarkerSeverity","Info","diag","startLineNumber","startColumn","endLineNumber","endColumn","fromPosition","column","lineNumber","fromRange","toRange","toCompletionItemKind","mItemKind","languages","toTextEdit","languageFeatures_CompletionAdapter","CompletionAdapter","provideCompletionItems","context","token","doComplete","info","wordInfo","getWordUntilPosition","wordRange","entry","item","insertText","sortText","filterText","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","suggestions","isMarkupContent","thing","toMarkdownString","toMarkedStringArray","HoverAdapter","provideHover","doHover","toDocumentHighlightKind","DocumentHighlightAdapter","provideDocumentHighlights","findDocumentHighlights","entries","toLocation","parse","DefinitionAdapter","provideDefinition","findDefinition","definition","ReferenceAdapter","provideReferences","findReferences","toWorkspaceEdit","resourceEdits","_a","RenameAdapter","provideRenameEdits","newName","doRename","toSymbolKind","mKind","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","provideColorPresentations","getColorPresentations","presentations","presentation","FoldingRangeAdapter","provideFoldingRanges","ranges","toFoldingRangeKind","Comment","Imports","Region","setupMode","first","more","apply","concat","registerCompletionItemProvider","registerHoverProvider","registerDocumentHighlightProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerRenameProvider","registerColorProvider","registerFoldingRangeProvider"],"mappings":"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","file":"chunk-488f8f99.bundle.js","sourcesContent":["/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `CSSWorker` instance\n                moduleId: 'vs/language/css/cssWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; });\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        });\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString());\n        }).then(function (diagnostics) {\n            var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n            var model = monaco.editor.getModel(resource);\n            if (model.getModeId() === languageId) {\n                monaco.editor.setModelMarkers(model, languageId, markers);\n            }\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new monaco.Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var wordInfo = model.getWordUntilPosition(position);\n            var wordRange = new Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText || entry.label,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    range: wordRange,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.additionalTextEdits) {\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                suggestions: items\n            };\n        });\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        });\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- document highlights ------\nfunction toDocumentHighlightKind(kind) {\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return monaco.languages.DocumentHighlightKind.Read;\n        case ls.DocumentHighlightKind.Write: return monaco.languages.DocumentHighlightKind.Write;\n        case ls.DocumentHighlightKind.Text: return monaco.languages.DocumentHighlightKind.Text;\n    }\n    return monaco.languages.DocumentHighlightKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.findDocumentHighlights(resource.toString(), fromPosition(position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            return entries.map(function (entry) {\n                return {\n                    range: toRange(entry.range),\n                    kind: toDocumentHighlightKind(entry.kind)\n                };\n            });\n        });\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\nvar DefinitionAdapter = /** @class */ (function () {\n    function DefinitionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.findDefinition(resource.toString(), fromPosition(position));\n        }).then(function (definition) {\n            if (!definition) {\n                return;\n            }\n            return [toLocation(definition)];\n        });\n    };\n    return DefinitionAdapter;\n}());\nexport { DefinitionAdapter };\n// --- references ------\nvar ReferenceAdapter = /** @class */ (function () {\n    function ReferenceAdapter(_worker) {\n        this._worker = _worker;\n    }\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.findReferences(resource.toString(), fromPosition(position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            return entries.map(toLocation);\n        });\n    };\n    return ReferenceAdapter;\n}());\nexport { ReferenceAdapter };\n// --- rename ------\nfunction toWorkspaceEdit(edit) {\n    if (!edit || !edit.changes) {\n        return void 0;\n    }\n    var resourceEdits = [];\n    for (var uri in edit.changes) {\n        var edits = [];\n        for (var _i = 0, _a = edit.changes[uri]; _i < _a.length; _i++) {\n            var e = _a[_i];\n            edits.push({\n                range: toRange(e.range),\n                text: e.newText\n            });\n        }\n        resourceEdits.push({ resource: Uri.parse(uri), edits: edits });\n    }\n    return {\n        edits: resourceEdits\n    };\n}\nvar RenameAdapter = /** @class */ (function () {\n    function RenameAdapter(_worker) {\n        this._worker = _worker;\n    }\n    RenameAdapter.prototype.provideRenameEdits = function (model, position, newName, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doRename(resource.toString(), fromPosition(position), newName);\n        }).then(function (edit) {\n            return toWorkspaceEdit(edit);\n        });\n    };\n    return RenameAdapter;\n}());\nexport { RenameAdapter };\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range)\n            }); });\n        });\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        });\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        });\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        });\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function (first) {\n        var more = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            more[_i - 1] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\n    };\n    var languageId = defaults.languageId;\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n    monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n    monaco.languages.registerDefinitionProvider(languageId, new languageFeatures.DefinitionAdapter(worker));\n    monaco.languages.registerReferenceProvider(languageId, new languageFeatures.ReferenceAdapter(worker));\n    monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker));\n    monaco.languages.registerRenameProvider(languageId, new languageFeatures.RenameAdapter(worker));\n    monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker));\n    monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\n    new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n}\n"],"sourceRoot":""}